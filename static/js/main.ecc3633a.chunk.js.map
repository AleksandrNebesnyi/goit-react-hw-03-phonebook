{"version":3,"sources":["components/Container/Container.styled.js","components/Container/Container.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/ContactsFilter/ContactsFilter.styled.js","components/ContactsFilter/ContactsFilter.jsx","App.js","index.js"],"names":["MainContainer","styled","div","Container","children","BoxSection","Title","h1","Section","title","defaultProps","Form","form","Label","label","Input","input","Button","button","ContactForm","state","name","number","hanldeChange","event","currentTarget","value","setState","hanldeSubmit","preventDefault","contact","id","nanoid","props","onSubmit","resetForm","this","type","placeholder","onChange","pattern","required","Component","List","ul","Item","li","Name","span","Number","a","ContactItem","onDeleteContact","href","onClick","ContactList","contacts","deleteContact","map","ContactsFilter","filter","onFilter","App","addContact","newContact","find","toast","warn","changeFilter","filterContacts","normalizedFilter","toLowerCase","includes","prevState","prevProps","nextContacts","localStorage","setItem","JSON","stringify","getContacts","parse","getItem","info","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ecc3633a.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\n\r\nexport const MainContainer = styled.div`\r\nmax-width: 1440px;\r\nmargin-left: auto;\r\nmargin-right: auto;\r\npadding-left: 15px;\r\npadding-right: 15px;\r\n`; ","\r\nimport React from 'react';\r\nimport {MainContainer} from './Container.styled'\r\n\r\n\r\nconst Container = ({ children }) => <MainContainer>{children}</MainContainer>;\r\n\r\nexport default Container;","\r\nimport styled from \"@emotion/styled\";\r\n\r\nexport const BoxSection = styled.div `\r\npadding: 15px;\r\ntext-align: center;\r\n`;\r\nexport const Title = styled.h1`\r\nmargin-bottom: 15px;\r\n`;","import PropTypes from 'prop-types';\r\nimport { BoxSection, Title } from './Section.styled';\r\n\r\nconst Section = ({ title, children}) => {\r\n    return (\r\n      <BoxSection >\r\n        <Title>{title}</Title>\r\n        {children}\r\n      </BoxSection>\r\n    );\r\n  };\r\n\r\n\r\n\r\n  Section.defaultProps = {\r\n    title: '',\r\n   \r\n  };\r\n  \r\n  Section.propTypes = {\r\n    title: PropTypes.string.isRequired ,\r\n    children: PropTypes.node,\r\n  };\r\n\r\nexport default Section;","import styled from \"@emotion/styled\";\r\n\r\nexport const Form = styled.form`\r\nwidth: 100%;\r\nmargin-right: auto;\r\nmargin-left: auto;\r\nmargin-bottom: 15px;\r\npadding: 15px;\r\nborder: 1px solid #d4d4d4;\r\n`;\r\nexport const Label = styled.label`\r\ndisplay: flex;\r\nflex-direction: column;\r\n\r\nmargin-bottom: 15px;\r\n\r\ncolor: #333232;\r\n`;\r\nexport const Input = styled.input`\r\npadding: 11px;\r\nborder: 1px solid rgba(33, 33, 33, 0.2);\r\nborder-radius: 4px;\r\n\r\ncursor: pointer;\r\n\r\n&:focus {\r\n    outline: transparent;\r\n    border: 1px solid #2196f3;\r\n}\r\n`;\r\nexport const Button = styled.button`\r\nmin-width: 150px;\r\n  height: 40px;\r\n  border: 0px solid transparent;\r\n  border-radius: 4px;\r\n\r\n  color: #fff;\r\n  background-color: #2196f3;\r\n\r\n  box-shadow: 0px 4px 4px rgb(0 0 0 / 15%);\r\n\r\n  opacity: 1;\r\n\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  cursor: pointer;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    opacity: 0.8;\r\n\r\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  }\r\n\r\n`;","import {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { nanoid } from 'nanoid'\r\nimport {Form, Label, Input, Button} from './ContactForm.styled'\r\n\r\n\r\n\r\nclass ContactForm extends Component {\r\n    // PropTypes как статическое свойство\r\n    static propTypes = {\r\n      onSubmit: PropTypes.func.isRequired,\r\n    };\r\n  \r\n    // Стейт формы\r\n    state = {\r\n      name: '',\r\n      number: '',\r\n    };\r\n  \r\n    // Метод, наблюдающий за инпутами и записывающий в стейт их значения\r\n    hanldeChange = event => {\r\n      const { name, value } = event.currentTarget;\r\n  \r\n      this.setState({\r\n        [name]: value,\r\n      });\r\n    };\r\n  \r\n    // Метод на отправке формы. Формирует из стейта контакт и передает во внешний метод\r\n    hanldeSubmit = event => {\r\n      event.preventDefault();\r\n  \r\n      const contact = {\r\n        id: nanoid(),\r\n        name: this.state.name,\r\n        number: this.state.number,\r\n      };\r\n       \r\n      this.props.onSubmit(contact); // Внешний метод в пропсах класса\r\n  \r\n      this.resetForm();\r\n    };\r\n  \r\n    // Сброс полей формы (после отправки)\r\n    resetForm = () => {\r\n      this.setState({\r\n        id: '',\r\n        name: '',\r\n        number: '',\r\n      });\r\n    };\r\n  \r\n    render() {\r\n      const {name,number}=this.state;\r\n      return (\r\n        <Form onSubmit={this.hanldeSubmit}>\r\n          <Label >\r\n            Name\r\n            <Input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Contact name\"\r\n              aria-label=\"Input for your name\"\r\n              value={name} // Пишем значение в стейт\r\n              onChange={this.hanldeChange} // Наблюдающий метод\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </Label>\r\n          <Label >\r\n            Number\r\n            <Input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              placeholder=\"Phone number\"\r\n              aria-label=\"Input for your phone number\"\r\n              value={number} // Пишем значение в стейт\r\n              onChange={this.hanldeChange} // Наблюдающий метод\r\n              pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n              title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n              required\r\n            />\r\n          </Label>\r\n         \r\n            <Button type=\"submit\" >\r\n              Add contact\r\n            </Button>\r\n          \r\n        </Form>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  \r\n  export default ContactForm;","import styled from '@emotion/styled';\r\n\r\n\r\nexport const List = styled.ul`\r\ndisplay: flex;\r\nflex-wrap: wrap;\r\n\r\nmargin-left: -15px;\r\nmargin-top: -15px;\r\n\r\n`;","import styled from '@emotion/styled';\r\n\r\n \r\nexport const Item = styled.li `\r\ndisplay: flex;\r\njustify-content: space-around;\r\n\r\nflex-basis: calc(100% / 1 - 15px);\r\npadding: 15px 5px;\r\nborder: 1px solid #d4d4d4;\r\n\r\ntext-align: center;\r\n\r\nmargin-left: 15px;\r\nmargin-top: 15px\r\n\r\n\r\n`; \r\n export const Name = styled.span `\r\n color: #333232;\r\n  font-weight: 500;\r\n `; \r\n\r\n\r\nexport const Number = styled.a`\r\nmargin-right: 15px;\r\n\r\ncolor: #000000;\r\n\r\nfont-weight: 700;\r\ntext-decoration: none;\r\n\r\ntransition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n&:hover,\r\n  &:focus {\r\n    color: #2196f3;\r\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  }\r\n\r\n`; \r\n\r\nexport const Button = styled.button`min-width: 50px;\r\nheight: 30px;\r\nborder: 0px solid transparent;\r\nborder-radius: 4px;\r\n\r\ncolor: #fff;\r\nbackground-color: #86888a;\r\n\r\nbox-shadow: 0px 4px 4px rgb(0 0 0 / 15%);\r\n\r\nopacity: 1;\r\n\r\ntransition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\ncursor: pointer;\r\n\r\n\r\n&:hover,\r\n&:focus {\r\n\r\n    opacity: 0.8;\r\n    background-color: #2196f3;\r\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  }\r\n\r\n`\r\n;","\r\n  \r\nimport {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Item, Name, Number, Button} from './ContactItem.styled'\r\n\r\n\r\n// Принимает один контакт и метод для удаления контакта\r\nclass ContactItem extends Component {\r\n\r\n    render(){\r\n        const { id, name, number  } = this.props.contact;\r\n        const onDeleteContact=this.props.onDeleteContact;\r\n        return (\r\n\r\n            <Item>\r\n              <Name>{name}: </Name>\r\n                   <Number href={`tel:${number}`} >\r\n                      {number}\r\n                    </Number>\r\n                    <Button\r\n                      \r\n                       type=\"button\"\r\n                       onClick={() => onDeleteContact(id)} // Метод на клике, принимает ID контакта\r\n                     >\r\n                      Delete\r\n                     </Button>\r\n                  </Item>\r\n\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nContactItem.propTypes ={\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n\r\n}\r\n\r\nexport default ContactItem;\r\n\r\n","import { Component } from \"react\";\r\nimport {List} from './ContactList.styled';\r\nimport PropTypes from 'prop-types';\r\nimport ContactItem from \"../ContactItem/ContactItem\";\r\n\r\n\r\n// Принимает все контакты и пробрасывает дальше метод для удаления контакта\r\nclass ContactList extends Component {\r\n\r\n\r\nrender()\r\n{\r\n    \r\n    const contacts =this.props.contacts;\r\n    const deleteContact = this.props.onDeleteContact;\r\n\r\n\r\n    return (\r\n        <List>\r\n      {contacts.map(contact => (\r\n        <ContactItem\r\n        key={contact.id}\r\n        contact={contact}\r\n        onDeleteContact={deleteContact}\r\n        />\r\n      ))}\r\n    </List>\r\n    )\r\n}\r\n}\r\n\r\n\r\n\r\nContactList.propTypes ={\r\n    onDeleteContact :PropTypes.func,\r\n\r\n}\r\n\r\nexport default ContactList;\r\n\r\n\r\n\r\n","import styled  from \"@emotion/styled\";\r\n\r\nexport const Form=styled.form\r\n`\r\n\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\n\r\nwidth: 300px;\r\npadding-bottom: 30px;\r\n\r\n`;\r\n\r\n\r\n\r\nexport const Label = styled.label \r\n`\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\n\r\nmargin-bottom: 15px;\r\n\r\ncolor: #333232;\r\n`;\r\n\r\n\r\nexport const Input=styled.input\r\n`\r\nwidth: 100%;\r\npadding: 11px;\r\nborder: 1px solid rgba(33, 33, 33, 0.2);\r\nborder-radius: 4px;\r\ntransition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\ncursor: pointer;\r\n\r\n&:focus {\r\n  outline: transparent;\r\n  border: 1px solid #2196f3;\r\n};\r\n\r\n`;","import {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Form, Label,Input} from './ContactsFilter.styled'\r\n\r\n// Принимает значение с поля фильтра и метод пишущий в стейт\r\nclass ContactsFilter extends Component {\r\n\r\n\r\n\r\n\r\n    \r\n render(){\r\n     const {filter, onFilter} = this.props\r\n    return (\r\n        <>\r\n        <Form >\r\n          <Label>\r\n            <h3>Find contacts by name:</h3>\r\n            <Input\r\n              type=\"text\"\r\n              value={filter}\r\n              onChange={onFilter}\r\n        />\r\n          </Label>\r\n        </Form>\r\n      </>\r\n    );\r\n }\r\n}\r\n\r\n\r\nContactsFilter.propTypes ={\r\nfilter : PropTypes.string.isRequired,\r\nonFilter: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\nexport default ContactsFilter;","import { Component } from 'react';\r\nimport Container from './components/Container/Container.jsx';\r\nimport Section from './components/Section/Section.jsx';\r\nimport ContactForm from './components/ContactForm/ContactForm.jsx';\r\nimport ContactList from './components/ContactList/ContactList.jsx';\r\nimport ContactsFilter from './components/ContactsFilter/ContactsFilter.jsx';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      // {\r\n      //   id: \"c7a273d-8bfr-66gr-wef2-4f4d57ea2d0\",\r\n      //   name: \"Rosie Simpson\",\r\n      //   number: \"459-12-56\",\r\n      // },\r\n      // {\r\n      //   id: \"anctrjd-8bfr-66gr-wef2-4f4d57ea2d0\",\r\n      //   name: \"Hermione Kline\",\r\n      //   number: \"443-89-12\",\r\n      // },\r\n      // {\r\n      //   id: \"dkt846a-8bfr-66gr-wef2-4f4d57ea2d0\",\r\n      //   name: \"Eden Clements\",\r\n      //   number: \"645-17-79\",\r\n      // },\r\n      // {\r\n      //   id: \"hr7y3td-8bfr-66gr-wef2-4f4d57ea2d0\",\r\n      //   name: \"Annie Copeland\",\r\n      //   number: \"227-91-26\",\r\n      // },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  // Вызывается после каждого обновления!\r\n  // Сравнивает стейты, и если не равны, тогда пишет в localStorage\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const nextContacts = this.state.contacts;\r\n    const prevContacts = prevState.contacts;\r\n    if (nextContacts !== prevContacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\r\n    }\r\n  }\r\n\r\n  //  Вызывается один раз при маунте!\r\n  //  Cчитывает при маунте localStorage и записывает в стейт\r\n  componentDidMount() {\r\n    const getContacts = JSON.parse(localStorage.getItem('contacts'));\r\n    if (getContacts) {\r\n      this.setState({ contacts: getContacts });\r\n      // console.log(getContacts);\r\n    } else {\r\n      toast.info('No save contacts');\r\n    }\r\n  }\r\n\r\n  // Добавляет контакт\r\n  addContact = newContact => {\r\n    // Проверка на дубликат\r\n    const duplicateName = this.state.contacts.find(\r\n      contact => contact.name === newContact.name,\r\n    );\r\n\r\n    if (duplicateName) {\r\n      toast.warn(`${newContact.name} is already on contacts`);\r\n\r\n      return;\r\n    }\r\n\r\n    this.setState(({ contacts }) => ({\r\n      contacts: [newContact, ...contacts],\r\n    }));\r\n  };\r\n\r\n  // Следит за полем фильтрации и пишет в стейт\r\n  changeFilter = event => {\r\n    event.preventDefault();\r\n    this.setState({ filter: event.currentTarget.value });\r\n  };\r\n\r\n  // Фильтрует и возвращает результат фильтра\r\n  filterContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    // console.log(this.state);\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    if (filter !== '') {\r\n      return contacts.filter(contact =>\r\n        contact.name.toLowerCase().includes(normalizedFilter),\r\n      );\r\n    } else {\r\n      return contacts;\r\n    }\r\n  };\r\n\r\n  // Удаляет контакт\r\n  deleteContact = id => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Section title=\"Phonebook\">\r\n          <ContactForm onSubmit={this.addContact} />\r\n        </Section>\r\n\r\n        <Section title=\"Contacts\">\r\n          <ContactsFilter\r\n            filter={this.state.filter}\r\n            onFilter={this.changeFilter}\r\n          />\r\n          <ContactList\r\n            contacts={this.filterContacts()}\r\n            onDeleteContact={this.deleteContact}\r\n          />\r\n        </Section>\r\n\r\n        <ToastContainer\r\n          position=\"top-right\"\r\n          autoClose={3000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}