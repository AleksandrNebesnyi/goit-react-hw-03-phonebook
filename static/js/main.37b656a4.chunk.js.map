{"version":3,"sources":["components/Container/Container.styled.js","components/Container/Container.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/ContactsFilter/ContactsFilter.styled.js","components/ContactsFilter/ContactsFilter.jsx","App.js","index.js"],"names":["MainContainer","styled","div","Container","children","BoxSection","Title","h1","Section","title","defaultProps","Form","form","Label","label","Input","input","Button","button","ContactForm","state","name","number","hanldeChange","event","currentTarget","value","setState","hanldeSubmit","preventDefault","contact","id","nanoid","props","onSubmit","resetForm","this","type","placeholder","onChange","pattern","required","Component","List","ul","Item","li","Name","span","Number","a","ContactItem","onDeleteContact","href","onClick","ContactList","contacts","deleteContact","map","ContactsFilter","filter","onFilter","App","addContact","newContact","find","toLowerCase","toast","warn","changeFilter","filterContacts","normalizedFilter","includes","prevState","prevProps","nextContacts","localStorage","setItem","JSON","stringify","getContacts","parse","getItem","length","info","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37b656a4.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\n\r\nexport const MainContainer = styled.div`\r\nmax-width: 1440px;\r\nmargin-left: auto;\r\nmargin-right: auto;\r\npadding-left: 15px;\r\npadding-right: 15px;\r\n`; ","\r\nimport React from 'react';\r\nimport {MainContainer} from './Container.styled'\r\n\r\n\r\nconst Container = ({ children }) => <MainContainer>{children}</MainContainer>;\r\n\r\nexport default Container;","\nimport styled from \"@emotion/styled\";\n\nexport const BoxSection = styled.div `\npadding: 15px;\ntext-align: center;\n`;\nexport const Title = styled.h1`\nmargin-bottom: 15px;\n`;","import PropTypes from 'prop-types';\nimport { BoxSection, Title } from './Section.styled';\n\nconst Section = ({ title, children}) => {\n    return (\n      <BoxSection >\n        <Title>{title}</Title>\n        {children}\n      </BoxSection>\n    );\n  };\n\n\n\n  Section.defaultProps = {\n    title: '',\n   \n  };\n  \n  Section.propTypes = {\n    title: PropTypes.string.isRequired ,\n    children: PropTypes.node,\n  };\n\nexport default Section;","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\nwidth: 100%;\nmargin-right: auto;\nmargin-left: auto;\nmargin-bottom: 15px;\npadding: 15px;\nborder: 1px solid #d4d4d4;\n`;\nexport const Label = styled.label`\ndisplay: flex;\nflex-direction: column;\n\nmargin-bottom: 15px;\n\ncolor: #333232;\n`;\nexport const Input = styled.input`\npadding: 11px;\nborder: 1px solid rgba(33, 33, 33, 0.2);\nborder-radius: 4px;\n\ncursor: pointer;\n\n&:focus {\n    outline: transparent;\n    border: 1px solid #2196f3;\n}\n`;\nexport const Button = styled.button`\nmin-width: 150px;\n  height: 40px;\n  border: 0px solid transparent;\n  border-radius: 4px;\n\n  color: #fff;\n  background-color: #2196f3;\n\n  box-shadow: 0px 4px 4px rgb(0 0 0 / 15%);\n\n  opacity: 1;\n\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    opacity: 0.8;\n\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n`;","import {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid'\nimport {Form, Label, Input, Button} from './ContactForm.styled'\n\n\n\nclass ContactForm extends Component {\n    // PropTypes как статическое свойство\n    static propTypes = {\n      onSubmit: PropTypes.func.isRequired,\n    };\n  \n    // Стейт формы\n    state = {\n      name: '',\n      number: '',\n    };\n  \n    // Метод, наблюдающий за инпутами и записывающий в стейт их значения\n    hanldeChange = event => {\n      const { name, value } = event.currentTarget;\n  \n      this.setState({\n        [name]: value,\n      });\n    };\n  \n    // Метод на отправке формы. Формирует из стейта контакт и передает во внешний метод\n    hanldeSubmit = event => {\n      event.preventDefault();\n  \n      const contact = {\n        id: nanoid(),\n        name: this.state.name,\n        number: this.state.number,\n      };\n       \n      this.props.onSubmit(contact); // Внешний метод в пропсах класса\n  \n      this.resetForm();\n    };\n  \n    // Сброс полей формы (после отправки)\n    resetForm = () => {\n      this.setState({\n        id: '',\n        name: '',\n        number: '',\n      });\n    };\n  \n    render() {\n      const {name,number}=this.state;\n      return (\n        <Form onSubmit={this.hanldeSubmit}>\n          <Label >\n            Name\n            <Input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Contact name\"\n              aria-label=\"Input for your name\"\n              value={name} // Пишем значение в стейт\n              onChange={this.hanldeChange} // Наблюдающий метод\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n            />\n          </Label>\n          <Label >\n            Number\n            <Input\n              type=\"tel\"\n              name=\"number\"\n              placeholder=\"Phone number\"\n              aria-label=\"Input for your phone number\"\n              value={number} // Пишем значение в стейт\n              onChange={this.hanldeChange} // Наблюдающий метод\n              pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n              title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n              required\n            />\n          </Label>\n         \n            <Button type=\"submit\" >\n              Add contact\n            </Button>\n          \n        </Form>\n      );\n    }\n  }\n\n\n\n\n  \n  export default ContactForm;","import styled from '@emotion/styled';\n\n\nexport const List = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\n\nmargin-left: -15px;\nmargin-top: -15px;\n\n`;","import styled from '@emotion/styled';\n\n \nexport const Item = styled.li `\ndisplay: flex;\njustify-content: space-around;\n\nflex-basis: calc(100% / 1 - 15px);\npadding: 15px 5px;\nborder: 1px solid #d4d4d4;\n\ntext-align: center;\n\nmargin-left: 15px;\nmargin-top: 15px\n\n\n`; \n export const Name = styled.span `\n color: #333232;\n  font-weight: 500;\n `; \n\n\nexport const Number = styled.a`\nmargin-right: 15px;\n\ncolor: #000000;\n\nfont-weight: 700;\ntext-decoration: none;\n\ntransition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n&:hover,\n  &:focus {\n    color: #2196f3;\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n`; \n\nexport const Button = styled.button`min-width: 50px;\nheight: 30px;\nborder: 0px solid transparent;\nborder-radius: 4px;\n\ncolor: #fff;\nbackground-color: #86888a;\n\nbox-shadow: 0px 4px 4px rgb(0 0 0 / 15%);\n\nopacity: 1;\n\ntransition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\ncursor: pointer;\n\n\n&:hover,\n&:focus {\n\n    opacity: 0.8;\n    background-color: #2196f3;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n`\n;","\n  \nimport {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Item, Name, Number, Button} from './ContactItem.styled'\n\n\n// Принимает один контакт и метод для удаления контакта\nclass ContactItem extends Component {\n\n    render(){\n        const { id, name, number  } = this.props.contact;\n        const onDeleteContact=this.props.onDeleteContact;\n        return (\n\n            <Item>\n              <Name>{name}: </Name>\n                   <Number href={`tel:${number}`} >\n                      {number}\n                    </Number>\n                    <Button\n                      \n                       type=\"button\"\n                       onClick={() => onDeleteContact(id)} // Метод на клике, принимает ID контакта\n                     >\n                      Delete\n                     </Button>\n                  </Item>\n\n\n        )\n    }\n\n}\n\nContactItem.propTypes ={\n    id: PropTypes.string,\n    name: PropTypes.string,\n    number: PropTypes.string,\n    onDeleteContact: PropTypes.func.isRequired,\n\n}\n\nexport default ContactItem;\n\n","import { Component } from \"react\";\nimport {List} from './ContactList.styled';\nimport PropTypes from 'prop-types';\nimport ContactItem from \"../ContactItem/ContactItem\";\n\n\n// Принимает все контакты и пробрасывает дальше метод для удаления контакта\nclass ContactList extends Component {\n\n\nrender()\n{\n    \n    const contacts =this.props.contacts;\n    const deleteContact = this.props.onDeleteContact;\n\n\n    return (\n        <List>\n      {contacts.map(contact => (\n        <ContactItem\n        key={contact.id}\n        contact={contact}\n        onDeleteContact={deleteContact}\n        />\n      ))}\n    </List>\n    )\n}\n}\n\n\n\nContactList.propTypes ={\n    onDeleteContact :PropTypes.func,\n\n}\n\nexport default ContactList;\n\n\n\n","import styled  from \"@emotion/styled\";\n\nexport const Form=styled.form\n`\n\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n\nwidth: 300px;\npadding-bottom: 30px;\n\n`;\n\n\n\nexport const Label = styled.label \n`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n\nmargin-bottom: 15px;\n\ncolor: #333232;\n`;\n\n\nexport const Input=styled.input\n`\nwidth: 100%;\npadding: 11px;\nborder: 1px solid rgba(33, 33, 33, 0.2);\nborder-radius: 4px;\ntransition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\ncursor: pointer;\n\n&:focus {\n  outline: transparent;\n  border: 1px solid #2196f3;\n};\n\n`;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Label, Input } from './ContactsFilter.styled';\n\n// Принимает значение с поля фильтра и метод пишущий в стейт\nclass ContactsFilter extends Component {\n  render() {\n    const { filter, onFilter } = this.props;\n    return (\n      <>\n        <Form>\n          <Label>\n            <h3>Find contacts by name:</h3>\n            <Input type=\"text\" value={filter} onChange={onFilter} />\n          </Label>\n        </Form>\n      </>\n    );\n  }\n}\n\nContactsFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onFilter: PropTypes.func.isRequired,\n};\n\nexport default ContactsFilter;\n","import { Component } from 'react';\r\nimport Container from './components/Container/Container.jsx';\r\nimport Section from './components/Section/Section.jsx';\r\nimport ContactForm from './components/ContactForm/ContactForm.jsx';\r\nimport ContactList from './components/ContactList/ContactList.jsx';\r\nimport ContactsFilter from './components/ContactsFilter/ContactsFilter.jsx';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      // {\r\n      //   id: \"c7a273d-8bfr-66gr-wef2-4f4d57ea2d0\",\r\n      //   name: \"Rosie Simpson\",\r\n      //   number: \"459-12-56\",\r\n      // },\r\n      // {\r\n      //   id: \"anctrjd-8bfr-66gr-wef2-4f4d57ea2d0\",\r\n      //   name: \"Hermione Kline\",\r\n      //   number: \"443-89-12\",\r\n      // },\r\n      // {\r\n      //   id: \"dkt846a-8bfr-66gr-wef2-4f4d57ea2d0\",\r\n      //   name: \"Eden Clements\",\r\n      //   number: \"645-17-79\",\r\n      // },\r\n      // {\r\n      //   id: \"hr7y3td-8bfr-66gr-wef2-4f4d57ea2d0\",\r\n      //   name: \"Annie Copeland\",\r\n      //   number: \"227-91-26\",\r\n      // },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  // Вызывается после каждого обновления!\r\n  // Сравнивает стейты, и если не равны, тогда пишет в localStorage\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const nextContacts = this.state.contacts;\r\n    const prevContacts = prevState.contacts;\r\n    if (nextContacts !== prevContacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\r\n    }\r\n  }\r\n\r\n  //  Вызывается один раз при маунте!\r\n  //  Cчитывает при маунте localStorage и записывает в стейт\r\n  componentDidMount() {\r\n    const getContacts = JSON.parse(localStorage.getItem('contacts'));\r\n    if (getContacts.length > 0) {\r\n      this.setState({ contacts: getContacts });\r\n    } else {\r\n      toast.info('No save contacts');\r\n    }\r\n  }\r\n\r\n  // Добавляет контакт\r\n  addContact = newContact => {\r\n    // Проверка на дубликат\r\n    const duplicateName = this.state.contacts.find(\r\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase(),\r\n    );\r\n    if (duplicateName) {\r\n      toast.warn(`${newContact.name} is already on contacts`);\r\n      return;\r\n    }\r\n\r\n    this.setState(({ contacts }) => ({\r\n      contacts: [...contacts, newContact],\r\n    }));\r\n  };\r\n\r\n  // Следит за полем фильтрации и пишет в стейт\r\n  changeFilter = event => {\r\n    event.preventDefault();\r\n    this.setState({ filter: event.currentTarget.value });\r\n  };\r\n\r\n  // Фильтрует и возвращает результат фильтра\r\n  filterContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    if (filter !== '') {\r\n      return contacts.filter(contact =>\r\n        contact.name.toLowerCase().includes(normalizedFilter),\r\n      );\r\n    } else {\r\n      return contacts;\r\n    }\r\n  };\r\n\r\n  // Удаляет контакт\r\n  deleteContact = id => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Section title=\"Phonebook\">\r\n          <ContactForm onSubmit={this.addContact} />\r\n        </Section>\r\n\r\n        <Section title=\"Contacts\">\r\n          <ContactsFilter\r\n            filter={this.state.filter}\r\n            onFilter={this.changeFilter}\r\n          />\r\n          <ContactList\r\n            contacts={this.filterContacts()}\r\n            onDeleteContact={this.deleteContact}\r\n          />\r\n        </Section>\r\n\r\n        <ToastContainer\r\n          position=\"top-right\"\r\n          autoClose={3000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}